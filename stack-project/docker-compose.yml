version: '3'

services:
  nginx:
    image: vavyskov/nginx:${NGINX_VERSION:-1.17-alpine3.10}
    container_name: ${COMPOSE_PROJECT_NAME:-project}_nginx
    volumes:
      - html_data:/var/www/html
      #- ./logs:/var/log
    depends_on:
      - php-fpm
    ports:
      - ${NGINX_PORT:-8082}:80
      - ${NGINX_PORT_SSL:-444}:443
    networks:
      - backend_network
      - frontend_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    labels:
      - traefik.enable=true
      - traefik.http.services.nginx.loadbalancer.server.port=80
      - traefik.http.routers.nginx.service=nginx
      #- traefik.http.routers.nginx.rule=Host(`project.example.com`)
      - traefik.http.routers.nginx.rule=Host(`${NGINX_URL:-project.example.com}`)

  php-fpm:
    image: vavyskov/php:${PHP_VERSION:-7.4-fpm-ssh-alpine3.11}
    container_name: ${COMPOSE_PROJECT_NAME:-project}_php-fpm
    depends_on:
      - mariadb
      - postgres
    environment:
      IMAGE_MODE: ${IMAGE_MODE:-dev}
      SSH_HOME: ${SSH_HOME:-/var/www}
      SSH_USER: ${SSH_USER:-ssh}
      SSH_PASSWORD: ${SSH_PASSWORD:-ssh}
      GIT_EMAIL: ${GIT_EMAIL:-my@email.com}
      GIT_NAME: ${GIT_NAME:-My Name}
      SMTP_IP: ${SMTP_IP:-192.168.99.100}
      SMTP_PORT: ${SMTP_PORT:-1026}
    #  APP_ENV: ${APP_ENV}
    #  APP_SECRET: ${APP_SECRET}
    #  DATABASE_URL: mysql://${MARIADB_USER}:${MARIADB_PASSWORD}@database:3306/${MARIADB_DATABASE}?serverVersion=5.7
    ports:
      - ${SSH_PORT:-2222}:22
    networks:
      - backend_network
    volumes:
      - html_data:/var/www/html
      - ~/.ssh:${SSH_HOME:-/var/www}/.shared/.ssh:ro
      #- ~/.gitconfig:${SSH_HOME}/.shared/.gitconfig:ro
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  mariadb:
    image: mariadb:${MARIADB_VERSION:-10.4}
    container_name: ${COMPOSE_PROJECT_NAME:-project}_mariadb
    environment:
      MYSQL_DATABASE: ${MARIADB_DATABASE:-mariadb}
      MYSQL_USER: ${MARIADB_USER:-mariadb}
      MYSQL_PASSWORD: ${MARIADB_PASSWORD:-mariadb}
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD:-root}
    volumes:
      #- ./mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mariadb_data:/var/lib/mysql
    ports:
      - ${MARIADB_PORT:-3307}:3306
    networks:
      - backend_network
    restart: unless-stopped
    #restart: always
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  postgres:
    image: postgres:${POSTGRES_VERSION:-12.2-alpine}
    container_name: ${COMPOSE_PROJECT_NAME:-project}_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DATABASE:-postgres}
      #PGDATA: /data/postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
       #- postgres:/data/postgres
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    networks:
      - backend_network
    restart: unless-stopped
    #restart: always
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  mailcatcher:
    image: vavyskov/mailcatcher:${MAILCATCHER_VERSION:-alpine3.11}
    container_name: ${COMPOSE_PROJECT_NAME:-project}_mailcatcher
    ports:
      - ${MAILCATCHER_PORT:-1081}:80
      - ${MAILCATCHER_SMTP_PORT:-1026}:25
    networks:
      - frontend_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    labels:
      - traefik.enable=true
      - traefik.http.services.mailcatcher.loadbalancer.server.port=80
      - traefik.http.routers.mailcatcher.service=mailcatcher
      #- traefik.http.routers.mailcatcher.rule=Host(`${MAILCATCHER_URL:-mailcatcher.example.com}`)
      - traefik.http.routers.mailcatcher.rule=Host(`${MAILCATCHER_URL:-example.com}`) && Path(`${MAILCATCHER_PATH:-/mailcatcher}`)

  adminer:
    image: adminer:${ADMINER_VERSION:-4.7-standalone}
    container_name: ${COMPOSE_PROJECT_NAME:-project}_adminer
    ports:
      - ${ADMINER_PORT:-8083}:8080
    networks:
      - backend_network
      - frontend_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    labels:
      - traefik.enable=true
      - traefik.http.services.adminer.loadbalancer.server.port=8080
      - traefik.http.routers.adminer.service=adminer
      #- traefik.http.routers.adminer.rule=Host(`${ADMINER_URL:-adminer.example.com}`)
      - traefik.http.routers.adminer.rule=Host(`${ADMINER_URL:-example.com}`) && Path(`${ADMINER_PATH:-/adminer}`)

networks:
  backend_network:
    external: true
  frontend_network:
    external: true

volumes:
  html_data:
  mariadb_data:
  postgres_data:
