version: '3'

services:

  whoami:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    container_name: whoami
    ports:
      - 5555:80
    deploy:
      replicas: 1
      placement:
          constraints:
            - node.role == manager
    labels:
      ## Explicitly tell Traefik to expose this container
      - traefik.enable=true

      ## The domain the service will respond to
      - traefik.http.routers.whoami.rule=Host(`whoami.localhost`)
#      - traefik.http.routers.whoami.rule=Host(`whoami.localhost`) && Path(`/whoami`)
      
      ## Load balancer
      - traefik.http.services.whoami.loadbalancer.server.port=80

      ## Allow request only from the predefined entry point named "http"
#      - traefik.http.routers.whoami.entrypoints=http

      ## Allow request only from the predefined entry point named "https"
#      - traefik.http.routers.whoami.entrypoints=https
      ## Uses the Host rule to define which certificate to issue
#      - traefik.http.routers.whoami.tls.certresolver=mytlschallenge



      #- traefik.http.routers.whoami.tls=true
      #- traefik.http.routers.whoami.tls.certresolver=letsEncrypt



      #- traefik.http.routers.whoami.service=whoami ## !!!

      #- --providers.docker.network=network_gateway

      ## Test/Debug
      #- --log.level=DEBUG
      #- --certificatesresolvers.myhttpchallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    networks:
      - network_gateway

networks:
  network_gateway:
    external: true
      #name: network_backend
