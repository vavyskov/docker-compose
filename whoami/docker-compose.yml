version: '3.5'

services:

  whoami:
    # A container that exposes an API to show its IP address
    image: containous/whoami:${WHOAMI_VERSION:-v1.4.0}
    container_name: whoami
    ports:
      - target: 80
        published: ${WHOAMI_PORT:-8082}
    networks:
      - frontend_network
    deploy:
      replicas: 1
      placement:
          constraints:
            - node.role == manager
          #constraints: [node.role == manager]
#      update_config:
#        failure_action: rollback
#        parallelism: 1
#        delay: 5s
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 3
#      resources:
#        limits:
#          memory: 128M
    labels:
      ## Explicitly tell Traefik to expose this container (because we disabled expose a service by default)
      - traefik.enable=true

      ## Load balancer (internal port)
      - traefik.http.services.whoami.loadbalancer.server.port=80

      #- traefik.http.services.whoami.loadbalancer.passhostheader=true

      ## Servis
      - traefik.http.routers.whoami.service=whoami
      ## The router 'whoami' will forward request to service api@internal
      #- traefik.http.routers.whoami.service=api@internal

      ## The domain the service will respond to
      - traefik.http.routers.whoami.rule=Host(`whoami.example.com`)
      ## Path (Exact match)
      #- traefik.http.routers.whoami.rule=Host(`whoami.example.com`) && Path(`/whoami`)
      ## PathPrefix (Prefix matcher)
      #- traefik.http.routers.whoami.rule=Host(`whoami.example.com`) && PathPrefix(`/whoami`)

      ## Allow request from both predefined entry points "http" and "https"
      #- traefik.http.routers.whoami.entrypoints=http,https

      ## Allow request only from the predefined entry point named "http"
      #- traefik.http.routers.whoami.entrypoints=http

      ## Allow request only from the predefined entry point named "https"
      #- traefik.http.routers.whoami.entrypoints=https

      ## TLS
      - traefik.http.routers.whoami.tls=true
      - traefik.http.routers.whoami.entrypoints=https

      ## LetsEncrypt
      #- traefik.http.routers.whoami.tls.certresolver=default
      #- traefik.http.routers.whoami.tls.certresolver=letsencrypt

      ## Redirection
      #- traefik.http.middlewares.whoami.redirectscheme.scheme=https
      #- traefik.http.middlewares.whoami.redirectscheme.permanent=true
      #- traefik.http.middlewares.whoami.redirectscheme.port=443

      ## Middlewares: Add prefix
      #- traefik.http.middlewares.add-foo.addprefix.prefix=/whoami
      #- traefik.http.routers.whoami.middlewares=add-foo@docker

networks:
  frontend_network:
    external: true
#  frontend_network:
#    driver: overlay
#    name: frontend_network
#    attachable: true
#    #driver_opts:
#      #encrypted: true