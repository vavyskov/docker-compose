## docker network create --driver=overlay frontend_network;
## docker stack deploy --compose-file=whoami2.yml whoami2

version: '3.5'

services:

  whoami2:
    # A container that exposes an API to show its IP address
    image: containous/whoami:${WHOAMI_VERSION:-v1.4.0}
    container_name: whoami2
    ports:
      - target: 80
        published: ${WHOAMI_PORT:-8085}
    networks:
      - frontend_network
    deploy:
      replicas: 1
      placement:
          constraints:
            - node.role == manager
          #constraints: [node.role == manager]
#      update_config:
#        failure_action: rollback
#        parallelism: 1
#        delay: 5s
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 3
#      resources:
#        limits:
#          memory: 128M
    labels:
      - traefik.enable=true
      - traefik.http.services.whoami2.loadbalancer.server.port=80
      - traefik.http.routers.whoami2.service=whoami2
      - traefik.http.routers.whoami2.rule=Host(`whoami2.example.com`)
#      - traefik.http.routers.whoami2.entrypoints=http

      ## TLS
#      - traefik.http.routers.whoami.tls=true
#      - traefik.http.routers.whoami.entrypoints=https

networks:
  frontend_network:
    external: true
#  frontend_network:
#    driver: overlay
#    name: frontend_network
#    attachable: true
#    #driver_opts:
#      #encrypted: true