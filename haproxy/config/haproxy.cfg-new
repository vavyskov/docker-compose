global
    log /dev/log	local0
    log /dev/log	local1 notice
#    chroot /var/lib/haproxy
#    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
#    user haproxy
#    group haproxy
    daemon

    # Default SSL material locations
    ca-base /usr/local/etc/certs/example.com.pem
    crt-base /usr/local/etc/private

    # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log	global
    mode	http
#    option	httplog
    option	dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
#    errorfile 400 /etc/haproxy/errors/400.http
#    errorfile 403 /etc/haproxy/errors/403.http
#    errorfile 408 /etc/haproxy/errors/408.http
#    errorfile 500 /etc/haproxy/errors/500.http
#    errorfile 502 /etc/haproxy/errors/502.http
#    errorfile 503 /etc/haproxy/errors/503.http
#    errorfile 504 /etc/haproxy/errors/504.http


frontend http
    bind *:80
    mode http
    acl is_well_known path_beg -i /.well-known/

    redirect scheme https code 301 if !is_well_known !{ ssl_fc }

    #Set acl based on domain name
#    acl host_nextcloud hdr(host) -i lemp.example.com
#    acl host_wordpress hdr(host) -i lepp.example.com

    #Set backend for each acl
#    use_backend nextcloud_http if host_nextcloud
#    use_backend wordpress_http if host_wordpress


frontend https
    bind *:443
#    option tcplog
    mode tcp
    acl tls req.ssl_hello_type 1
    tcp-request inspect-delay 5s
    tcp-request content accept if tls

    #Set acl based on the domain name
    acl is_nextcloud req.ssl_sni -i lemp.example.com
    acl is_wordpress req.ssl_sni -i lepp.example.com

    #Set backend for each acl
    use_backend nextcloud_https if is_nextcloud
    use_backend wordpress_https if is_wordpress


#backend nextcloud_http
#    mode tcp
#    server ubuntu-nextcloud lemp_nginx:80 check

#backend wordpress_http
#    mode tcp
#    server ubuntu-wordpress lepp_nginx:80 check

backend nextcloud_https
    mode tcp
    option ssl-hello-chk
    server ubuntu-nextcloud lemp_nginx:443 check

backend wordpress_https
    mode tcp
    option ssl-hello-chk
    server ubuntu-wordpress lepp_nginx:443 check
