version: '3'

services:
  nginx:
    image: vavyskov/nginx:${NGINX_VERSION:-1.17-php-fpm-alpine3.10}
    container_name: ${COMPOSE_PROJECT_NAME:-project}_nginx
    volumes:
      - html_data:${PROJECT_ROOT:-/var/www/html}
      #- ./logs:/var/log
    depends_on:
      - php-fpm
    environment:
      NGINX_ROOT: ${NGINX_ROOT:-/var/www/html/public}
      ## Hostname: php-fpm (docker service name)
      NGINX_FASTCGI_HOSTNAME: ${NGINX_FASTCGI_HOSTNAME:-php-fpm}
      NGINX_FASTCGI_PORT: ${NGINX_FASTCGI_PORT:-9000}
    ports:
      - ${NGINX_PORT:-8083}:80
      - ${NGINX_PORT_SSL:-444}:443
    networks:
      - backend_network
      - frontend_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    labels:
      - traefik.enable=true
      - traefik.http.services.nginx.loadbalancer.server.port=80
      - traefik.http.routers.nginx.service=nginx
      - traefik.http.routers.nginx.rule=Host(`${PROJECT_HOSTNAME:-project.example.com}`)

  php-fpm:
    image: vavyskov/php:${PHP_VERSION:-7.4-fpm-alpine3.11}
    container_name: ${COMPOSE_PROJECT_NAME:-project}_php-fpm
    #hostname: "web_app_fpm"
    #depends_on:
    #  - mariadb
    #  - postgres
    environment:
      PROJECT_MODE: ${PROJECT_MODE:-dev}
      PHP_HOME: ${PHP_HOME:-/var/www}
      PHP_USER: ${PHP_USER:-user}
      SMTP_HOSTNAME: ${SMTP_HOSTNAME:-192.168.99.100}
      SMTP_PORT: ${SMTP_PORT:-1026}
      #SMTP_FROM: ${SMTP_FROM}
      SMTP_FROM: ${SMTP_FROM:-team@example.com}
      ## SMTP user example: ${SMTP_USER:-user}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-password}
      ## Proxy server example: ${PROXY_SERVER:-http://user:password@proxy.example.com:8080}
#      PROXY_SERVER: ${PROXY_SERVER}
      #APP_ENV: ${APP_ENV}
      #APP_SECRET: ${APP_SECRET}
      #DATABASE_HOSTNAME: mysql://${MARIADB_USER}:${MARIADB_PASSWORD}@database:3306/${MARIADB_DATABASE}?serverVersion=5.7
    networks:
      - backend_network
    volumes:
      - html_data:${PROJECT_ROOT:-/var/www/html}
      #- ~/.ssh:${SSH_HOME:-/var/www}/.shared/.ssh:ro
      #- ~/.gitconfig:${SSH_HOME}/.shared/.gitconfig:ro
    #working_dir: /var/www/html
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  ssh:
    image: vavyskov/ssh:${SSH_VERSION:-php7.4-cli-alpine3.11}
    container_name: ${COMPOSE_PROJECT_NAME:-project}_ssh
    #hostname: "web_app_ssh"
    depends_on:
      - php-fpm
    environment:
      PROJECT_MODE: ${PROJECT_MODE:-dev}
      SSH_HOME: ${SSH_HOME:-/var/www}
      SSH_USER: ${SSH_USER:-user}
      SSH_PASSWORD: ${SSH_PASSWORD:-password}
      GIT_EMAIL: ${GIT_EMAIL:-my@email.com}
      GIT_NAME: ${GIT_NAME:-My Name}
      SMTP_HOSTNAME: ${SMTP_HOSTNAME:-192.168.99.100}
      SMTP_PORT: ${SMTP_PORT:-1026}
      SMTP_FROM: team@example.com
      ## SMTP user example: ${SMTP_USER:-user}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-password}
      ## Proxy server example: ${PROXY_SERVER:-http://user:password@proxy.example.com:8080}
      PROXY_SERVER: ${PROXY_SERVER}
      XDEBUG_HOSTNAME: ${XDEBUG_HOSTNAME:-192.168.99.100}
      #APP_ENV: ${APP_ENV}
      #APP_SECRET: ${APP_SECRET}
      #DATABASE_HOSTNAME: mysql://${MARIADB_USER}:${MARIADB_PASSWORD}@database:3306/${MARIADB_DATABASE}?serverVersion=5.7
    ports:
      - ${SSH_PORT:-2222}:22
    networks:
      - backend_network
    volumes:
      ## nocopy: při prvotním vytvoření "volume" nekopíruje data z kontejneru do úložiště (v našem případě by již úložiště mělo existovat, takže "nocopy" je uvedeno jen pro "jistotu")
      - html_data:${PROJECT_ROOT:-/var/www/html}:nocopy
      #- ~/.ssh:${SSH_HOME:-/var/www}/.shared/.ssh:ro
      #- ~/.gitconfig:${SSH_HOME}/.shared/.gitconfig:ro
    #working_dir: /var/www/html
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      #resources:
        #limits:
        #  cpus: '0.001'
        #  memory: 50M
      #  reservations:
          #cpus: '0.0001'
      #    memory: 2G

  mariadb:
    image: mariadb:${MARIADB_VERSION:-10.4}
    container_name: ${COMPOSE_PROJECT_NAME:-project}_mariadb
    environment:
      MYSQL_DATABASE: ${MARIADB_DATABASE:-mariadb}
      MYSQL_USER: ${MARIADB_USER:-mariadb}
      MYSQL_PASSWORD: ${MARIADB_PASSWORD:-mariadb}
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD:-root}
    command: ["mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_czech_ci"]
    volumes:
      #- ./mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mariadb_data:/var/lib/mysql
    ports:
      - ${MARIADB_PORT:-3308}:3306
    networks:
      - backend_network
    restart: unless-stopped
    #restart: always
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  postgres:
    image: postgres:${POSTGRES_VERSION:-12.2-alpine}
    container_name: ${COMPOSE_PROJECT_NAME:-project}_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DATABASE:-postgres}
      #PGDATA: /data/postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
       #- postgres:/data/postgres
    ports:
      - ${POSTGRES_PORT:-5434}:5432
    networks:
      - backend_network
    restart: unless-stopped
    #restart: always
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  mailcatcher:
    image: vavyskov/mailcatcher:${MAILCATCHER_VERSION:-alpine3.11}
    container_name: ${COMPOSE_PROJECT_NAME:-project}_mailcatcher
    ports:
      - ${MAILCATCHER_PORT:-1081}:80
      - ${MAILCATCHER_SMTP_PORT:-1026}:25
    networks:
      - frontend_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    labels:
      - traefik.enable=true
      - traefik.http.services.mailcatcher.loadbalancer.server.port=80
      - traefik.http.routers.mailcatcher.service=mailcatcher
      - traefik.http.routers.mailcatcher.rule=Host(`${MAILCATCHER_HOSTNAME:-mailcatcher.example.com}`)
      #- traefik.http.routers.mailcatcher.rule=Host(`${PROJECT_HOSTNAME:-project.example.com}`) && Path(`${MAILCATCHER_PATH:-/mailcatcher}`)

  adminer:
    image: adminer:${ADMINER_VERSION:-4.7-standalone}
    container_name: ${COMPOSE_PROJECT_NAME:-project}_adminer
    ports:
      - ${ADMINER_PORT:-8084}:8080
    networks:
      - backend_network
      - frontend_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    labels:
      - traefik.enable=true
      - traefik.http.services.adminer.loadbalancer.server.port=8080
      - traefik.http.routers.adminer.service=adminer
      #- traefik.http.routers.adminer.rule=Host(`${ADMINER_HOSTNAME:-adminer.example.com}`)
      - traefik.http.routers.adminer.rule=Host(`${PROJECT_HOSTNAME:-project.example.com}`) && Path(`${ADMINER_PATH:-/adminer}`)

networks:
  backend_network:
    external: true
  frontend_network:
    external: true

volumes:
  html_data:
    #driver_opts:
    #  type: nfs
    #  o: addr=${NFS_HOSTNAME:-nfs.example.com},nolock,soft,rw
    #  device: :${NFS_PATH:-/media/nfs_docker/dev/project/html_data}
  mariadb_data:
    #driver_opts:
    #  type: nfs
    #  o: addr=${NFS_HOSTNAME:-nfs.example.com},nolock,soft,rw
    #  device: :${NFS_PATH:-/media/nfs_docker/dev/project/mariadb_data}
  postgres_data:
    #driver_opts:
    #  type: nfs
    #  o: addr=${NFS_HOSTNAME:-nfs.example.com},nolock,soft,rw
    #  device: :${NFS_PATH:-/media/nfs_docker/dev/project/postgres_data}
