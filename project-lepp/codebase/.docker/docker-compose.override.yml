## Stack LEPP (Linux (E)Nginx PostgreSQL PHP)

version: '3.8'

services:
  nginx:
    image: vavyskov/nginx:${NGINX_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    hostname: ${PROJECT_HOSTNAME}
    volumes:
#      - html_data:${PROJECT_ROOT}:nocopy
      - ..:${PROJECT_ROOT}
      ## Custom certificates (set path also in dynamic/certificates.yml)
      - ../../../project-environment/certificates:/etc/ssl/certificates:ro
    depends_on:
      - php
    environment:
      PROJECT_HOSTNAME: ${PROJECT_HOSTNAME}
      FASTCGI_HOSTNAME: ${COMPOSE_PROJECT_NAME}_php
      CERTIFICATE_PATH: ${CERTIFICATE_PATH}
      CERTIFICATE_FILENAME: ${CERTIFICATE_FILENAME}
      CERTIFICATE_KEYNAME: ${CERTIFICATE_KEYNAME}
    ports:
      - target: 80
        published: ${NGINX_PORT}
    networks:
      - frontend_network
      - backend_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}_nginx.loadbalancer.server.port=80
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_nginx.rule=Host(`${PROJECT_HOSTNAME}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_nginx.tls=true

  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      LC_COLLATE: ${LC_COLLATE}
      LC_CTYPE: ${LC_CTYPE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - target: 5432
        published: ${POSTGRES_PORT}
    networks:
      - database_network
      - project_network
    deploy:
      replicas: 1

networks:
  frontend_network:
    external: true
  backend_network:
    external: true
  database_network:
    external: true
  project_network:
    external: true
    name: ${COMPOSE_PROJECT_NAME}_network

volumes:
#  html_data:
#    name: ${COMPOSE_PROJECT_NAME}_html_data
##    driver_opts:
##      type: nfs
##      o: addr=${NFS_HOSTNAME},nolock,soft,rw
##      device: :${NFS_PATH}/${COMPOSE_PROJECT_NAME}/volumes/html_data
  postgres_data:
    name: ${COMPOSE_PROJECT_NAME}_postgres_data
#    driver_opts:
#      type: nfs
#      o: addr=${NFS_HOSTNAME},nolock,soft,rw
#      device: :${NFS_PATH}/${COMPOSE_PROJECT_NAME}/volumes/postgres_data
