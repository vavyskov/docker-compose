## Stack LEPP (Linux (E)Nginx PostgreSQL PHP)

version: '3.8'

services:
  nginx:
    image: vavyskov/nginx:${NGINX_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    hostname: ${PROJECT_BASE_URL}
    volumes:
      - html_data:${PROJECT_ROOT}:nocopy
    depends_on:
      - php-fpm
    ports:
      - target: 80
        published: ${NGINX_PORT}
    networks:
      - frontend_network
      - project_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}_nginx.loadbalancer.server.port=80
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_nginx.tls=true

  php-ssh:
    image: vavyskov/php:${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_php-ssh
    depends_on:
      - php-fpm
    environment:
      PROJECT_MODE: ${PROJECT_MODE}
      PHP_USER: ${PHP_USER}
      PHP_PASSWORD: ${PHP_PASSWORD}
      GIT_EMAIL: ${GIT_EMAIL}
      GIT_NAME: ${GIT_NAME}
      PROXY_SERVER: ${PROXY_SERVER}
      PHP_XDEBUG_HOST: ${PHP_XDEBUG_HOST}
    command: /usr/sbin/sshd -D
    ports:
      - target: 22
        published: ${SSH_PORT}
    networks:
      - project_network
    volumes:
      - html_data:${PROJECT_ROOT}:nocopy
#      - ~/.ssh:${SSH_HOME}/.shared/.ssh
#      - ~/.gitconfig:${SSH_HOME}/.shared/.gitconfig
    deploy:
      replicas: 1

  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      LC_COLLATE: ${LC_COLLATE}
      LC_CTYPE: ${LC_CTYPE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - target: 5432
        published: ${POSTGRES_PORT}
    networks:
      - project_network
    deploy:
      replicas: 1

  mailcatcher:
    image: vavyskov/mailcatcher:${MAILCATCHER_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_mailcatcher
    ports:
      - target: 80
        published: ${MAILCATCHER_PORT}
      - target: 25
        published: ${SMTP_PORT}
    networks:
      - frontend_network
      - project_network
    deploy:
      replicas: 1
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}_mailcatcher.loadbalancer.server.port=80
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_mailcatcher.rule=Host(`mailcatcher-${PROJECT_BASE_URL}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_mailcatcher.tls=true

  adminer:
    image: adminer:${ADMINER_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_adminer
    ports:
      - target: 8080
        published: ${ADMINER_PORT}
    networks:
      - frontend_network
      - project_network
    deploy:
      replicas: 1
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}_adminer.loadbalancer.server.port=8080
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_adminer.rule=Host(`adminer-${PROJECT_BASE_URL}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_adminer.tls=true

  php-cron:
    image: vavyskov/php:${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_php-cron
    environment:
      PROJECT_MODE: ${PROJECT_MODE}
      PHP_USER: ${PHP_USER}
      PHP_SENDMAIL_PATH: ${PHP_SENDMAIL_PATH}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_FROM: ${SMTP_FROM}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
## ToDo: More lines
#      PHP_CRONTAB: ${PHP_CRONTAB}
    command: /usr/sbin/crond -f -d 0
    networks:
      - project_network
    volumes:
      - html_data:${PROJECT_ROOT}
      - ./config/crontab:/etc/crontabs/root
    deploy:
      replicas: 1

networks:
  frontend_network:
    external: true
  project_network:
    external: true
    name: ${COMPOSE_PROJECT_NAME}_network

volumes:
  html_data:
    name: ${COMPOSE_PROJECT_NAME}_html_data
#    driver_opts:
#      type: nfs
#      o: addr=${NFS_HOST},nolock,soft,rw
#      device: :${NFS_PATH}/${COMPOSE_PROJECT_NAME}/volumes/html_data
  postgres_data:
    name: ${COMPOSE_PROJECT_NAME}_postgres_data
#    driver_opts:
#      type: nfs
#      o: addr=${NFS_HOST},nolock,soft,rw
#      device: :${NFS_PATH}/${COMPOSE_PROJECT_NAME}/volumes/postgres_data
