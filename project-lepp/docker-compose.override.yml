## Stack LEPP (Linux (E)Nginx PostgreSQL PHP)
## Find-Replace: "lepp"
## docker network create --driver=overlay frontend_network
## docker network create --driver=overlay lepp_network
## docker stack deploy --compose-file=docker-compose.override.yml lepp

version: '3.5'

services:
  nginx:
    image: vavyskov/nginx:1.18-php-fpm-alpine3.11
    container_name: lepp_nginx
    hostname: lepp.example.com
    volumes:
      - html_data:/var/www/html:nocopy
#      - /etc/ss/path:/etc/ssl/path:ro
    ## Docker Swarm (docker stack deploy) does not support "depends_on" :(
    depends_on:
      - php-fpm
#    environment:
#      TIME_ZONE: UTC
#      NGINX_ROOT: /var/www/html/public
#      FASTCGI_HOSTNAME: php-fpm
#      FASTCGI_PORT: 9000
#      CERTIFICATE_PATH: ${CERTIFICATE_PATH:-/etc/ssl/path}
#      CERTIFICATE_FILENAME: ${CERTIFICATE_FILENAME:-lepp-example-com.crt}
#      CERTIFICATE_KEYNAME: ${CERTIFICATE_KEYNAME:-lepp-example-com.key}
    #ports:
    #  - target: 80
    #    published: 8088
    #  - target: 443
    #    published: 448
    networks:
      - frontend_network
      - lepp_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    labels:
      - traefik.enable=true
      - traefik.http.services.lepp_nginx.loadbalancer.server.port=80
      - traefik.http.routers.lepp_nginx.rule=Host(`lepp.example.com`)
#      - traefik.http.routers.lepp_nginx.tls=true

  ssh:
    image: vavyskov/ssh:php7.4-cli-alpine3.11
    container_name: lepp_ssh
#    hostname: lepp.example.com
    ## Docker Swarm (docker stack deploy) does not support "depends_on" :(
    depends_on:
      - php-fpm
    environment:
      PROJECT_MODE: dev
      #TIME_ZONE: UTC
      SSH_USER: lepp
      SSH_PASSWORD: lepp
      GIT_EMAIL: my@email.com
      GIT_NAME: My Name
      #PROXY_SERVER: http://user:password@proxy.example.com:8080
      XDEBUG_HOSTNAME: 192.168.99.1
    ports:
      - target: 22
        published: 2223
    networks:
      - lepp_network
    volumes:
      - html_data:/var/www/html:nocopy
#      - ~/.ssh:/var/www/.shared/.ssh:ro
#      - ~/.gitconfig:/var/www/.shared/.gitconfig:ro
    deploy:
      replicas: 1

  postgres:
    image: postgres:12.2-alpine
    container_name: lepp_postgres
    environment:
      POSTGRES_USER: lepp
      POSTGRES_PASSWORD: lepp
      POSTGRES_DB: lepp
      LC_COLLATE: utf8mb4_czech_ci
      LC_CTYPE: utf8mb4_czech_ci
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - target: 5432
        published: 5435
    networks:
      - lepp_network
    deploy:
      replicas: 1

networks:
  frontend_network:
    external: true
  lepp_network:
    external: true

volumes:
  html_data:
    name: lepp_html_data
#    driver_opts:
#      type: nfs
#      o: addr=${NFS_HOSTNAME:-nfs.example.com},nolock,soft,rw
#      device: :${NFS_PATH:-/media/nfs_docker/dev/lepp/volumes/html_data}
  postgres_data:
    name: lepp_postgres_data
#    driver_opts:
#      type: nfs
#      o: addr=${NFS_HOSTNAME:-nfs.example.com},nolock,soft,rw
#      device: :${NFS_PATH:-/media/nfs_docker/dev/lepp/volumes/postgres_data}
